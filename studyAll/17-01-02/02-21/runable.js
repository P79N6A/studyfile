线程五种状态：创建、就绪、运行、阻塞和死亡
VM启动时会有'一个由主方法所定义的线程'。可以'通过创建Thread的实例'来'创建新的线程'。
'每个线程'都是'通过'某个'特定Thread对象所对应的方法run（）来完成其操作的'，
'方法run()称为线程体'。通过'调用Thread类的start()方法来启动一个线程'。

1.生成线程对象，没有调用该对象的start方法，处于'创建状态'。
2.调用了线程对象的start方法，进入了'就绪状态',此时'线程调度程序'还'没有把该线程设置为当前线程'
3.'线程调度程序将'处于'就绪状态的线程设置为当前线程'，进入了'运行状态'，'运行run函数当中的代码'
4.'线程在运行时被暂停'，通常是为了等待某个时间的发生(比如说某项资源就绪)之后再继续运行。
'sleep,suspend，wait'等方法'都可以导致线程阻塞'
5.'线程的run方法执行结束'或者'调用stop方法'后，该线程就会死亡

常用：'类实现Runnable'接口，'重写run方法'。用new Thread(Runnable target).start()方法来启动


原理:'调用start()后，线程会进入排队状态，等待CPU调度'，
轮到谁，谁会调用run()方法，执行线程体。完毕后再次进入队列

'start启动线程后'，'无需等待run方法体'代码'执行完毕'，可以直接'继续执行下面的代码'；
通过'调用Thread类的start()方法'来启动一个线程,该'线程处于就绪状态'， 并没有运行。 
然后通过此Thread类'调用方法run()来完成其运行操作'的， 
这里方法'run()称为线程体，它包含了要执行的这个线程的内容，' 
Run方法运行结束， 此线程终止。然后CPU再调度其它线程

多线程就是分时利用CPU，宏观上让所有线程一起执行 ，也叫并发

总结，就绪状态的线程只有一个，但是润run中的线程却有好多个；run中的并行执行，
就完成了多线程同步执行