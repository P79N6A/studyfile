Hibernate查询方法有两个，'get()'，'load()'
load有懒加载的特性。
'Load'在查询某一条数据的时候并'不'会'直接将'这条'数据'以指定对象的形式来'返回'，
而是'在'你真正需要'使用该对象'里面的一些属性'的时候才'会'去数据库'访问并'得到数据'。
他的好处就是可以'减少'程序本身因为'与数据库'频繁'的交互'造成的处理速度缓慢。


与一对一关联不同，'一对多和多对一'的关联下，'主表'的每'一条'属性都会'对应从表'的'多条'数据，
这个时候'懒加载'就显得'非常有效'了。比如'一个部门'里面有'多个员工'，如果'没有懒加载'，
每'查询'这个'部门的时候'都'会查询'出'多个员工'，这会大大增加与数据库交互的成本。
所以Hbernate'默认'的是'加入懒加载'的。这就是查询集合属性的时候返回的是一个
PersistentIndexed*类型对象的原因。该对象其实就是一个代理对象。当然，
可以在映射文件中通过将lazy属性设为假来禁用。