'原文:https://www.cnblogs.com/aspirant/p/5697807.html'

在IDF05（Intel Developer Forum 2005）上，
Intel首席执行官Craig Barrett就取消4GHz芯片计划一事，
半开玩笑当众单膝下跪致歉，给广大软件开发者一个明显的信号，
'单纯依靠''垂直提升硬件性能''来提高系统性能的时代''已结束'，
'分布式开发的时代''实际上'早已'悄悄地成为了时代的主流'，
'吵得很热的云计算'实际上'只是包装在''分布式之外的商业概念'，
'很多开发者'（包括我）都'想加入研究云计算'这个潮流，
在google上通过“云计算”这个关键词来查询资料，
查到的都是些概念性或商业性的宣传资料，
'其实真正需要深入的'还'是'那个早以被人熟知的概念------'分布式'。

'分布式''可繁也可以简'，最'简单的分布式'就'是大家最常用的'，
在'负载均衡服务器后''加一堆web服务器'，
'然后在上面''搞一个缓存服务器'来'保存临时状态'，'后面共享一个数据库'，
其实'很多号称分布式专家的人'也'就停留于此'，大致结构如下图所示：

'这种环境'下真正'进行分布式的''只是web server'而已，
'并且web server之间''没有任何联系'，所以'结构和实现''都非常简单'。

'有些情况下'，对'分布式的需求'就'没这么简单'，'在每个环节上''都有分布式的需求'，
'比如Load Balance、DB、Cache和文件等等'，并且'当分布式节点之间''有关联时'，
还'得考虑之间的通讯'，另外，'节点非常多的时候'，'得有监控和管理''来支撑'。
这样看起来，'分布式是一个''非常庞大的体系'，
只不过'你可以根据具体需求''进行适当地裁剪'。
'按照最完备的分布式体系来看'，'可以由以下模块组成'：

'分布式任务处理服务'：'负责具体的''业务逻辑处理'

'分布式节点注册和查询'：'负责管理''所有分布式节点的命名''和物理信息的注册与查询'，
'是节点之间''联系的桥梁'

'分布式DB'：'分布式结构化数据存取'

'分布式Cache'：'分布式缓存数据（非持久化）存取'

'分布式文件'：'分布式文件存取'

'网络通信'：'节点之间的网络数据通信'

'监控管理'：'搜集、监控和诊断''所有节点运行状态'

'分布式编程语言'：'用于分布式环境下'的'专有编程语言'，比'如Elang、Scala'

'分布式算法'：'为解决分布式环境下''一些特有问题的算法'，比'如解决一致性问题的Paxos算法'

因此，'若要深入研究云计算和分布式'，'就得深入研究以上领域'，
而'这些领域每一块的水都很深'，都'需要很底层的知识和技术来支撑'，
所以说，'对于想提升技术的开发者来说'，'以分布式来作为切入点''是非常好的'，
可以'以此为线索'，'探索计算机世界的各个角落'。
 
'集群是个物理形态'，'分布式是个工作方式'。

'只要是一堆机器'，'就可以叫集群'，'他们是不是一起协作着干活'，这个'谁也不知道'；
'一个程序或系统'，'只要运行在不同的机器上'，
'就可以叫分布式'，嗯，'C/S架构''也可以叫分布式'。

'集群''一般是''物理集中、统一管理的'，而'分布式系统'则'不强调这一点'。

所以，'集群可能运行着''一个或多个分布式系统'，'也可能根本没有运行分布式系统'；
'分布式系统''可能运行在一个集群上'，
'也可能运行在''不属于一个集群的多台（2台也算多台）机器上'。
 
'分布式''是相对中心化而来'，'强调的是''任务在多个物理隔离的节点上进行'。
'中心化带来的主要问题''是可靠性'，'若中心节点宕机''则整个系统不可用'，
'分布式''除了解决部分中心化问题'，'也倾向于分散负载'，
但'分布式''会带来很多的其他问题'，'最主要的'就'是一致性'。
'集群就是逻辑上''处理同一任务的机器集合'，可以'属于同一机房'，
'也可分属不同的机房'。'分布式这个概念''可以运行在''某个集群里面'，
'某个集群''也可作为分布式概念的''一个节点'。
一句话，就是：'“分头做事”''与“一堆人”''的区别'
 
著作权归作者所有，转载请联系作者获得授权。

'分布式''是指将不同的业务''分布在不同的地方'。
而'集群指的是''将几台服务器集中在一起'，'实现同一业务'。

'分布式中的每一个节点'，'都可以做集群'。 而'集群并不一定就是分布式'的。

举例：就'比如新浪网'，'访问的人多了'，'他可以做一个群集'，'前面放一个响应服务器'，
'后面几台服务器完成同一业务'，'如果有业务访问的时候'，
'响应服务器''看哪台服务器的负载不是很重'，'就将给哪一台去完成'。

'而分布式'，'从窄意上理解'，'也跟集群差不多'， '但是它的组织比较松散'，
'不像集群'，'有一个组织性'，'一台服务器垮了'，'其它的服务器可以顶上来'。

'分布式的每一个节点'，'都完成不同的业务'，'一个节点垮了'，'那这个业务''就不可访问了'。

2：简单说，'分布式是以缩短单个任务的执行时间''来提升效率的'，
而'集群则是通过提高单位时间内''执行的任务数''来提升效率'。

例如：
'如果一个任务''由10个子任务组成'，'每个子任务单独执行需1小时'，
则'在一台服务器上执行该任务''需10小时'。
'采用分布式方案'，'提供10台服务器'，'每台服务器只负责处理一个子任务'，
'不考虑子任务间的依赖关系'，'执行完这个任务''只需一个小时'。
('这种工作模式的一个典型代表''就是Hadoop的Map/Reduce分布式计算模型'）

'而采用集群方案'，'同样提供10台服务器'，'每台服务器''都能独立处理这个任务'。
'假设有10个任务同时到达'，'10个服务器''将同时工作'，
'1小时后'，'10个任务同时完成'，这样，整身来看，'还是1小时内完成一个任务！'

'集群一般被分为''三种类型'，'高可用集群'如'RHCS、LifeKeeper等'，
'负载均衡集群'如'LVS等'、'高性能运算集群';'分布式'应该'是高性能运算集群范畴内'。
 
分布式：'不同的业务模块''部署在不同的服务器上''或者同一个业务模块''分拆多个子业务'，
'部署在不同的服务器上'，'解决高并发的问题'

集群：'同一个业务部署在多台机器上'，'提高系统可用性'
 
小饭店原来只有一个厨师，切菜洗菜备料炒菜全干。
后来客人多了，厨房一个厨师忙不过来，又请了个厨师，
两个厨师都能炒一样的菜，这两个厨师的关系是集群。
为了让厨师专心炒菜，把菜做到极致，又请了个配菜师负责切菜，备菜，备料，
厨师和配菜师的关系是分布式，一个配菜师也忙不过来了，
又请了个配菜师，两个配菜师关系是集群
