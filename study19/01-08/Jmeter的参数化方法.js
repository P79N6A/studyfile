https://blog.csdn.net/seven_five577/article/details/55106155

一、'利用函数助手''获取参数值'
选项->函数助手对话框
'__CSVRead',
'__Random',
'生成的函数字符串'：
${__Random(,,)}
'第一个参数'为'随机数的下限'，
'第二个参数'为'随机数的上限'，
'第三个参数'为'储存随机数'的'变量名'；
                                   
${__CSVRead(,)}
'第一个参数'是'文件名'(包含路径)，
'第二个参数'是'文件中的列'（列数从0开始）；

'参数化数据'
'__CSVRead':'复制生成'的'参数化函数'，'打开登陆请求页面'，
'在右则的参数化中''找到'我们'要参数化的字段'，这里'对用户名'和'密码''做参数化'，
'第一列'是'用户名'，'列号为0'；'第二列'是'密码'，'列号为1'；
'修改函数'中'对应的参数化字段列号'就可以了，'点击运行'会'调用相应路径下'的'参数文件'

'_Random函数'是'从某数据段''随机读取数据''替换参数'，
'当需要添加多条数据记录'且'某些字段'需'要唯一性时''使用'。

二、'利用配置元件'（CSV Data Set Config）

1.'选中线程组'，点击'右键'，'添加－配置元件'－'CSV Data Set Config'
Recycle on EOF：'是否循环读入'，因为'CSV Data Set Config''一次读入一行'，
'分割后'存入'若干变量中''交给一个线程'，如果'线程数超过'
文本的'记录行数'，那么'可以选择从头再次读入'.

Recycle on EOF'与Stop thread on EOF结果的关联'：
当Recycle on EOF选择true时，Stop thread on EOF选择true和false无任何意义，
通俗的讲，在前面控制了不停的循环读取，后面再来让stop或run没有任何意义
当'Recycle on EOF选择flase时'，'Stop thread on EOF选择true'，'线程4个，参数3个'，
那么只'会请求3次'
当'Recycle on EOF选择flase时'，'Stop thread on EOF选择flase'，'线程4个，参数3个'，
那么'会请求4次'，但'第4次没有参数可取'，不让循环，所以'第4次请求错误'

2.'填写'刚才'定义好的变量'

三、'用户自定义变量'
一般'定义测试系统'的'固定使用的变量'，比如'主机地址端口号'，'数据库账号密码'等。
选中线程组，点击右键，'添加－配置元件-用户定义的变量'

'值'可以'直接输入'，'也可''通过函数__CSVRead''从文件中读取'，
'还可以''通过前缀''加随机数和方法获取'。
比如'用户名为user_0到user_100的用户'，那么'用户名可设置名''user_${__Random(0,100,)}'

'但'是'这种每次执行的''多个线程''所替换的参数一样'，
因为'先获取到随机参数'，'再执行多个HTTP请求'。

