填充因子最简单的理解方法：
	一张'A4纸'，用'word去写东西'， 写了'两页' 比如，'每页10行,且只能容纳10行'
现在'你要修改第一页的内容'，'增加一行'，在'第9行增加'，是不是'从10行之后'全部'顺延下去'，
然后 'word自动增加了第三页'
	这个时候，如果'你的填充因子是20行'，'但'，你'每页还是''只填入了10行'，
那么，你在'第一页的第9行增加一行之后'，发生了什么事？
恩，结果就是，'仍是两页'，且，'第二页的文档''没有发生'任何'变化'。
	这个时候，就有个问题啦： 在'什么情况下'用'多大的填充因子'呢？ 呵呵。
的确， 要看具体需要了，写的多，则大，查的多，则小，具体情况具体对待。
延伸：
	'索引最重要的参数'：是'填充因子'。
当'创建'一个'新索引'，或'重建'一个'存在的索引'时，你可以'指定一个填充因子'，'它是'在索引创建时索引里的'数据页被填充的数量'。
'填充因子'设置'为100'意味着'每个索引页100％填满'，'50意味着每个索引页50％填满'。
	如果你'创建一个''填充因子为100的聚集索引'（'在'一个'非单调递增'的'列上'），那意味着'每当一个记录被插入'（或修改）时，
'页拆分都会发生'，因为'在现存的页上'没有'这些数据的空间'。'很多的页拆分'会'降低sqlserver的性能'。   
	举个例子：假定你刚刚'用缺省的填充因子'新'创建'了一个'索引'。当'sqlserver创建它时'，它'把索引放在相邻的物理页面'上，
因为'数据能够''顺序的读''所以这样会有最优的i/o访问'。但'当'表随着、、、增加和改变时，'发生了页拆分'。当页拆分发生时，
sqlserver必'须'在磁盘的某处'分配一个新的页'，这些'新的页'和'最初的物理页''不是连续的'。因此，'访问使用'的'是随机的i/o'，
而'不是有顺序的i/o'，这样'访问索引页'会'变得更慢'。
	那么'理想的填充因子'是多少呢？它'依赖'于应用程序对sqlserver'表的读和写的比率'。首要的原则，按照下面的指导：   
'低更改的表'（读写比率为100：1）：'100％的填充因子'   
'高更改的表'（写超过读）：'50-70％的填充因子'
'读写各一半'的：'80-90％的填充因子'   在为应用程序'找到最优的填充因子'前也'不得不进行试验'。
不要'假定一个低的填充因子总比高的好'。'低的填充因子会减少页拆分'，它也'增加了sqlserver查询期间读的页数量'，从而'减少性能'。
'太低的填充因子'不仅'增加i/o开销'，也'影响缓存'。当'数据页从磁盘移到缓存中时'，'整个页（包括空的空间）都移到缓存中'。
所以'填充因子越低'，不得不'移到sqlserver缓存中的页面就越多'，意味着同时'为其他重要数据页驻留的空间就少'，从而'降低性能'。   
如果'你没有指定填充因子'，缺省的'填充因子时0'，意味着'100％的填充因子'（索引的叶页'100％的填满'，但'索引的中间页有预留的空间'）。



短信发送的原则目前是两条：
1．'app操作界面'有'是否发送短信选项'的，'按照选择的情况'来选择'是否下发'。
2．凡是'线下的订单类型'都'必须发短信提醒'（'与第一条冲突的时候按照第一条执行'）。
'固定预定'，'约个球'，'赛一赛'都和'普通订单'合并发送，显示为'普通订单的文字描述'。




