分支就是科幻电影里面的平行宇宙，当你正在电脑前努力学习Git的时候，
另一个你正在另一个平行宇宙里努力学习SVN。

如果两个平行宇宙互不干扰，那对现在的你也没啥影响。不过，在某个时间点，
两个平行宇宙合并了，结果，你既学会了Git又学会了SVN！

learn-branches

分支在实际中有什么用呢？假设你准备开发一个新功能，但是需要两周才能完成，
第一周'你写了'50%的代码，如果立刻提交，由于代码还没写完，
'不完整的代码'库会导致别人不能干活了。如果等代码'全部写完再'一次'提交'，
又存在'丢失每天进度'的巨大风险。

现在有了分支，就不用怕了。你'创建'了一个属于你'自己的分支'，'别人'看不到，
还继续'在原来'的'分支上'正常'工作'，而'你在''自己的分支'上'干活'，想提交就提交，
直到'开发完毕'后，再'一次性合并到'原来的'分支'上，这样，既安全，又不影响别人工作。

其他版本控制系统如SVN等都有分支管理，但是用过之后你会发现，
这些版本控制系统创建和切换分支比蜗牛还慢，简直让人无法忍受，
结果分支功能成了摆设，大家都不去用。

但Git的分支是与众不同的，无论创建、切换和删除分支，Git在1秒钟之内就能完成！
无论你的版本库是1个文件还是1万个文件。

