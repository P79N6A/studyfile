说明：Jenkins折腾了好几个月了，打算写个系列记录下。有时间会尽量更新的。

第一章 'Jenkins是什么？'
'Jenkins' '是'一个'可扩展'的'持续集成引擎'。

主要'用于'：
'持续、自动'地'构建/测试'软件'项目'。
'监控'一些'定时'执行的'任务'。

Jenkins拥有的'特性'包括：
易于安装-只要'把jenkins.war部署到servlet容器'，'不需'要'数据库'支持。
易于配置-所有'配置都'是'通过'其提供的'web界面实现'。
集成RSS/E-mail通过RSS发布构建结果或当'构建完成时''通过e-mail通知'。
'生成'JUnit/TestNG'测试报告'。
分布式构建支持'Jenkins''能'够'让多台计算机''一起构建/测试'。
文件识别:Jenkins'能够跟踪'哪次构建'生成'哪些'jar'，哪次构建'使用哪个版本'的'jar'等。
插件支持:'支持扩展插件'，你可以开发适合自己团队使用的工具。


Jenkins的'由来'
目前持续集成(CI)已成为当前许多软件开发团队在整个软件开发生命周期内侧重于保证代码质量的常见做法。
它是一种实践，旨在'缓和'和'稳固软件'的'构建过程'。并且能够帮助您的开发团队应对如下挑战：

软件'构建自动化' ：配置完成后，CI系统会依'照'预先制定的'时间表'，'或者'针对某一'特定事件'，对目标软件'进行构建'。
构建可持续的'自动化检查' ：CI系统能'持续'地'获取新增'或'修改后'签入的'源代码'，也就是说，
当软件开发'团队'需'要周期性'的检查'新增或修改'后的'代码时'，'CI系统''会'不断'确认'这些'新代码是否破坏'了
'原有软件''的'成功'构建'。这'减少'了'开发者'们在'检查彼此相互依存'的'代码'中'变化情况'需'要花费的时间'和
精力(说直接一点也是钱啊，呵呵)。
构建可持续的'自动化测试' ：构建检查的扩展部分，'构建后''执行'预先制定的一套'测试规则'，
完成后'触发通知'(Email,RSS等等)'给相关的当事人'。
生成后'后续过程'的'自动化' :当自动化检查和测试成功完成，软件构建的周期中可能也
需要一些额外的任务，诸如生成文档、打包软件、部署构件到一个运行环境或者软件仓库。
这样，构件才能更迅速地提供给用户使用。


部署一个CI系统需要的'最低要求'是
一个'可获取的源代码的仓库'，
一个'包含构建脚本的项目'。


该系统的各个组成部分是'按如下顺序'来发挥'作用'的：

1. '开发者检入代码''到源代码仓库'。
2. 'CI系统'会'为每一个项目''创建'了一个'单独'的'工作区'。'当'预设或'请求'一次'新'的'构建时'，
'它'将'把源代码仓库'的'源码存放到'对应的'工作区'。
3. 'CI系统'会'在'对应的'工作区'内'执行构建'过程。
4. （配置如果存在）'构建'完成'后'，'CI'系统会'在'一个'新'的'构件中执行''定义''的'一套'测试'。
'完成后'触发'通知'(Email,RSS等等)给相关的'当事人'。
5. （配置如果存在）如果'构建成功'，这个'构件'会'被打包'并'转移到'一个'部署目标'
(如应用服务器)'或存储为'软件'仓库'中'的'一个'新版本'。
软件仓库可以是CI系统的一部分，也可以是一个外部的仓库，
诸如一个文件服务器或者像Java.NET、 SourceForge之类的网站。
6. 'CI系统'通常会'根据请求''发起'相应的'操作'，诸如即时构建、生成报告，或者检索一些构建好的构件。
'Jenkins''就是'这么一个'CI系统'。之前叫做Hudson。


以下是'使用Jenkins'的一些'理由'：
是'所有CI产品中'在'安装和配置'上'最简单'的。
'基于Web访问'，用户界面非常友好、直观和灵活，在许多情况下，还'提供'了'AJAX'的'即时反馈'。
Jenkins是'基于Java开发'的(如果你是一个Java开发人员，这是非常有用的)，但它不仅限于构建基于Java的软件。
Jenkins拥'有大量的插件'。这些插件极大的'扩展'了'Jenkins的功能'；它们都是开源的，
而且它们可以直接通过web界面来进行安装与管理。


1.1 Jenkins的'目标'
Jenkins的主要目标是'监控'软件'开发流程'，'快速显示问题'。
所以能'保证开发人员'以及相关人员省时省力'提高'开发'效率'。

'CI系统'在整个开发过程中的'主要作用是控制'：当'系统'在代码存储库中'探测到修改'时，
它'将'运行'构建'的'任务委托'给构建'过程本身'。如果'构建失败'了，那么'CI系统'将'通知相关人员'，
然后'继续监视''存储库'。它的角色看起来是被动的；但它确'能快速反映问题'。

特别是它'具有以下优点'：
Jenkins一切'配置'都'可以在web界面'上'完成'。'有些配置'如'MAVEN_HOME和Email'，'只'需要'配置一次'，
所有的项目就都能用。当然'也可'以'通过修改XML'进行'配置'。
'支持Maven'的模块(Module)，Jenkins'对Maven做了优化'，因此它能'自动识别Module'，
'每个Module'可以'配置成一个job'。相当灵活。
'测试报告聚合'，'所有模块'的'测试报告'都被'聚合在一起'，结果一目了然，使用其他CI，
这几乎是件不可能完成的任务。
'构件指纹'(artifact fingerprint)，'每次build'的'结果构件'都'被很好'的'自动管理'，
'无需'任何'配置'就可以'方便'的'浏览下载'。

