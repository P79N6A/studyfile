'抓包'工具'tcpdump'使用'详解':
在'linux'环境下，'tcpdump采用命令行'方式'对接口的数据包'进行'筛选抓取'，
'支持'针对'网络层'、'协议'、'主机'、'网络或端口'的'过滤'，
并'提供''and、or、not'等'逻辑语句'来帮助你'去掉无用'的'信息'。

'抓包选项:'
'-c'：指定'抓包数量'。（这个数量是'指最终'要获取的'包数'，实际可能要处理的比10个包多）

'-i' ：指定需要'监听的接口'。'默认'会'抓取第一个'网络'接口'，且只有'将tcpdump进程终止''才会停止抓包'。

'-n'：'对地址'以'数字方式显式'，'否则''显式'为'主机名'，也就是说'-n选项''不做主机名解析'。

'-nn'：除了'-n'的'作用外'，还把'端口''显示为数值'，否则显示端口服务名。

'-N'：'不打印'出'host'的'域名部分'。

'-P'：指定要'抓取的包'是'流入还是流出'的包。可以'给定的值'为"in"、"out"和"inout"，默认为"inout"。

'-s len'：设置tcpdump的'数据包'抓取'长度为len'，如果不设'置默'认将会'是65535字节'，理论上抓取长度'越小越好'。

'输出选项'
'-e'：输出的'每行中'都将'包括数据链'路层头部信息，例如源MAC和目标MAC。

'-q'：'快速打印输出'。即打印'很少的协议'相关信息，从而'输出行'都'比较简短'。

'-X'：输出包的'头部数据'，会以'16进制和ASCII''两种方式'同时'输出'。

'-XX'：输出包的'头部数据'，会以'16进制和ASCII两种方式'同时输出，'更详细'。

'-v'：当'分析和打印'的时候，产生'详细的输出'。

'-vv'：产生比-v更详细的输出。

'-vvv'：产生比-vv更详细的输出。

'操作实例'
1、指定抓取'eth0口'的'数据包'，'结果保存在opt目录下'，'命名为1.cap文件'。
tcpdump -i eth0 -c 10 -w /opt/1.cap

2、'监视'指定网络的'数据包'，如'本机与192.168.200'网段通信的'数据包'，'抓取10个包'。
tcpdump -c 10 net 192.168.200

3、抓取到'本机22端口'的'包'，抓取'10个包'。
tcpdump -c 10 -i eth0 tcp dst port 22

4、'抓取ping包'
tcpdump -c 5 -nn -i eth0 icmp

