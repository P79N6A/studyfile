//1.app购买套餐，回调天数的地方，要多给用户一天
//混合支付对应的所有回调地方
//
//1.app购买套餐，回调的地方，不能删除用户的免费天数，并将免费天数冻结起来（冻结后定时任务中，不再扣除免费天数中的时长）
//混合支付对应的所有回调地方
//
//2.app我的套餐接口，【给个字段，标记目前扣除的是免费天数，还是套餐。**不给也行，因为先套餐，后免费的顺序是定的，{怕将来来很多套餐共存}】
//
//2.app我的套餐接口，【给个字段，自动续费开关，1只有线上购买的套餐，有这个字段；2只能有一个套餐的开关是开启的，{目前只能有一个套餐}】
//
//3.app增加一个设置套餐开关的接口，线上购买的套餐，能够设置开关
//
//4.定时任务在套餐到期的时候，触发，自动续费；成功或者失败，发送短信
//
//5.用户次数剩余x次之后，触发，自动续费{x为几？}；成功或者失败，发送短信
//
//1. 支付逻辑{可变可不变}变：如果是按照截至日期计算的套餐，不扣次数，不变，默认一个很大的次数的，理论上用不完的次数，扣了也不会用完
//
//1.app我的套餐接口，【给个字段，到期时间，剩余天数？？】

1.新到的套餐先冻结掉，之后再扣除，status = 2 冻结


2.故障处理的接口，倒着排序，分页


扣次数				1换,2取  							RentService.consumePackage 134

计算次数			1app预约时/2移动换电/3柜子上扫码    PowerStationController.verify 776

套餐到期			定时任务							AutoExpenseTask.expirePackageConsume

查询				查看我的套餐						UserController.getMyPackage


1、'标题'【故障列表】'改'为【待处理故障】，字体样式及布局不变
2、'入口'【历史故障】'改'为【已处理故障】，字体样式及布局不变
3、【'故障列表'】、【'历史故障'】'调整排序'，按'发生''时间降序排列'，即新故障在最上，便于查看
4、【'故障处理'】'页面的处理记录'，按'处理时间''降序排列'，即新处理记录在最上，便于查看





